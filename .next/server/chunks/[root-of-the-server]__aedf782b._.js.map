{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/devisha/Projects/chat-and-predict/src/algorithms/betAdvice.ts"],"sourcesContent":["// Bet advice logic for prediction market bot\n\nexport interface BetAdviceInput {\n  marketProbability: number; // e.g. 0.55 for 55%\n  botProbability: number;    // e.g. 0.60 for 60%\n  marketOdds: number;        // e.g. 1.8 (decimal odds)\n  bankroll?: number;         // optional, for stake advice\n  priceHistory?: number[];   // optional, for trend analysis\n}\n\nexport interface BetAdviceResult {\n  oddsAdvice: string;\n  stakeAdvice: string;\n  trendAdvice: string;\n  sentimentAdvice: string;\n}\n\nexport function getBetAdvice(input: BetAdviceInput): BetAdviceResult {\n  // (A) Odds Analysis\n  const edge = input.botProbability - input.marketProbability;\n  let oddsAdvice = '';\n  if (edge > 0) {\n    oddsAdvice = \"This market is undervalued. You’re getting alpha here. Go for it 🤑.\";\n  } else {\n    oddsAdvice = \"Careful! The market is overpricing this. Risk is higher than reward ⚠️.\";\n  }\n\n  // (B) Stake Size Advice (Kelly Criterion)\n  let stakeAdvice = '';\n  if (input.bankroll && input.marketOdds > 1) {\n    // Kelly formula: f* = (bp - q) / (odds - 1), where b = odds - 1, p = botProbability, q = 1 - p\n    const b = input.marketOdds - 1;\n    const p = input.botProbability;\n    const q = 1 - p;\n    const kelly = (b * p - q) / b;\n    const percent = Math.max(0, Math.round(kelly * 100));\n    stakeAdvice = `Optimal stake: ${percent}% of your bankroll.`;\n  } else {\n    stakeAdvice = \"No bankroll info provided. Can't compute optimal stake.\";\n  }\n\n  // (C) Market Trends (mocked)\n  let trendAdvice = '';\n  if (input.priceHistory && input.priceHistory.length > 1) {\n    const oldPrice = input.priceHistory[0];\n    const newPrice = input.priceHistory[input.priceHistory.length - 1];\n    const change = ((newPrice - oldPrice) / oldPrice) * 100;\n    if (Math.abs(change) > 20) {\n      trendAdvice = `Warning: Odds have shifted ${change.toFixed(1)}% in the last period. Could be risky 🚨.`;\n    } else {\n      trendAdvice = `Market is stable. Change: ${change.toFixed(1)}%.`;\n    }\n  } else {\n    trendAdvice = \"No price history available for trend analysis.\";\n  }\n\n  // (D) Sentiment Check (mocked)\n  const sentimentAdvice = Math.random() > 0.5\n    ? \"Sentiment is highly bullish on this outcome – 80% of recent posts agree.\"\n    : \"Sentiment is mixed. Proceed cautiously.\";\n\n  return {\n    oddsAdvice,\n    stakeAdvice,\n    trendAdvice,\n    sentimentAdvice,\n  };\n} "],"names":[],"mappings":"AAAA,6CAA6C;;;;AAiBtC,SAAS,aAAa,KAAqB;IAChD,oBAAoB;IACpB,MAAM,OAAO,MAAM,cAAc,GAAG,MAAM,iBAAiB;IAC3D,IAAI,aAAa;IACjB,IAAI,OAAO,GAAG;QACZ,aAAa;IACf,OAAO;QACL,aAAa;IACf;IAEA,0CAA0C;IAC1C,IAAI,cAAc;IAClB,IAAI,MAAM,QAAQ,IAAI,MAAM,UAAU,GAAG,GAAG;QAC1C,+FAA+F;QAC/F,MAAM,IAAI,MAAM,UAAU,GAAG;QAC7B,MAAM,IAAI,MAAM,cAAc;QAC9B,MAAM,IAAI,IAAI;QACd,MAAM,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI;QAC5B,MAAM,UAAU,KAAK,GAAG,CAAC,GAAG,KAAK,KAAK,CAAC,QAAQ;QAC/C,cAAc,CAAC,eAAe,EAAE,QAAQ,mBAAmB,CAAC;IAC9D,OAAO;QACL,cAAc;IAChB;IAEA,6BAA6B;IAC7B,IAAI,cAAc;IAClB,IAAI,MAAM,YAAY,IAAI,MAAM,YAAY,CAAC,MAAM,GAAG,GAAG;QACvD,MAAM,WAAW,MAAM,YAAY,CAAC,EAAE;QACtC,MAAM,WAAW,MAAM,YAAY,CAAC,MAAM,YAAY,CAAC,MAAM,GAAG,EAAE;QAClE,MAAM,SAAS,AAAC,CAAC,WAAW,QAAQ,IAAI,WAAY;QACpD,IAAI,KAAK,GAAG,CAAC,UAAU,IAAI;YACzB,cAAc,CAAC,2BAA2B,EAAE,OAAO,OAAO,CAAC,GAAG,wCAAwC,CAAC;QACzG,OAAO;YACL,cAAc,CAAC,0BAA0B,EAAE,OAAO,OAAO,CAAC,GAAG,EAAE,CAAC;QAClE;IACF,OAAO;QACL,cAAc;IAChB;IAEA,+BAA+B;IAC/B,MAAM,kBAAkB,KAAK,MAAM,KAAK,MACpC,6EACA;IAEJ,OAAO;QACL;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///Users/devisha/Projects/chat-and-predict/src/app/api/analyze/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getBetAdvice } from '@/algorithms/betAdvice';\n\nconst NODIT_ETH_ENDPOINT = 'https://web3.nodit.io/v1/ethereum/mainnet/token/getTokenPricesByContracts';\nconst TOKEN_CONTRACTS: Record<string, string | null> = {\n  ETH: null, // native\n  WBTC: '0x2260FAC5E5542a773AaA73edC008A79646d1F9912',\n  WDOGE: '0x3832d2F059E55934220881F831bE501D180671A7',\n  WSOL: '0xd93f7E271cB87c23AaA73edC008A79646d1F9912',\n  USDT: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n  USDC: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  SHIBA: '0xd93f7E271cB87c23AaA73edC008A79646d1F9912',\n  TON: '0xd93f7E271cB87c23AaA73edC008A79646d1F9912',\n  PEPE: '0xd93f7E271cB87c23AaA73edC008A79646d1F9912',\n  BONK: '0xd93f7E271cB87c23AaA73edC008A79646d1F9912',\n};\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { token, priceToken, marketProbability, botProbability, marketOdds, bankroll, priceHistory } = await req.json();\n    if (\n      typeof marketProbability !== 'number' ||\n      typeof botProbability !== 'number' ||\n      typeof marketOdds !== 'number' ||\n      typeof token !== 'string'\n    ) {\n      return NextResponse.json({ error: 'Invalid input' }, { status: 400 });\n    }\n\n    let price = null;\n    const lookupToken = priceToken || token;\n    if (lookupToken === 'ETH') {\n      price = 3500;\n    } else {\n      const contract = TOKEN_CONTRACTS[lookupToken];\n      if (!contract) {\n        return NextResponse.json({ error: 'Unsupported token' }, { status: 400 });\n      }\n      const noditRes = await fetch(NODIT_ETH_ENDPOINT, {\n        method: 'POST',\n        headers: {\n          'X-API-KEY': process.env.NODIT_API_KEY || '',\n          'accept': 'application/json',\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({ contractAddresses: [contract], currency: 'USD' }),\n      });\n      const noditData = await noditRes.json();\n      price = noditData?.data?.[0]?.price || null;\n    }\n\n    const result = getBetAdvice({ marketProbability, botProbability, marketOdds, bankroll, priceHistory });\n    return NextResponse.json({ ...result, price, token });\n  } catch (error) {\n    return NextResponse.json({ error: (error as Error).message }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,qBAAqB;AAC3B,MAAM,kBAAiD;IACrD,KAAK;IACL,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM;IACN,MAAM;IACN,OAAO;IACP,KAAK;IACL,MAAM;IACN,MAAM;AACR;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,MAAM,IAAI,IAAI;QACnH,IACE,OAAO,sBAAsB,YAC7B,OAAO,mBAAmB,YAC1B,OAAO,eAAe,YACtB,OAAO,UAAU,UACjB;YACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QACrE;QAEA,IAAI,QAAQ;QACZ,MAAM,cAAc,cAAc;QAClC,IAAI,gBAAgB,OAAO;YACzB,QAAQ;QACV,OAAO;YACL,MAAM,WAAW,eAAe,CAAC,YAAY;YAC7C,IAAI,CAAC,UAAU;gBACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAAoB,GAAG;oBAAE,QAAQ;gBAAI;YACzE;YACA,MAAM,WAAW,MAAM,MAAM,oBAAoB;gBAC/C,QAAQ;gBACR,SAAS;oBACP,aAAa,QAAQ,GAAG,CAAC,aAAa,IAAI;oBAC1C,UAAU;oBACV,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,mBAAmB;wBAAC;qBAAS;oBAAE,UAAU;gBAAM;YACxE;YACA,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,QAAQ,WAAW,MAAM,CAAC,EAAE,EAAE,SAAS;QACzC;QAEA,MAAM,SAAS,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD,EAAE;YAAE;YAAmB;YAAgB;YAAY;YAAU;QAAa;QACpG,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,GAAG,MAAM;YAAE;YAAO;QAAM;IACrD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}}]
}